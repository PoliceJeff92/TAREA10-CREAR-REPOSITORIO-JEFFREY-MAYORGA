<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3e647325-70bf-45fb-a137-ac76d69e6093" name="Changes" comment="Tarea: Trabajando con Diccionarios en Python&#10;&#10;Objetivo: Utilizar diccionarios en Python para representar información estructurada y realizar operaciones comunes.&#10;&#10;Instrucciones:&#10;&#10;    Crear un Diccionario:&#10;        Crea un diccionario llamado informacion_personal que contenga información ficticia sobre una persona, incluyendo al menos las claves &quot;nombre&quot;, &quot;edad&quot;, &quot;ciudad&quot; y &quot;profesion&quot;.&#10;&#10;    Acceder y Modificar Valores:&#10;        Accede al valor asociado con la clave &quot;ciudad&quot; y modifícalo con una ciudad diferente.&#10;        Agrega una nueva clave-valor al diccionario que represente la &quot;profesion&quot; de la persona.&#10;&#10;    Verificar Existencia de Claves:&#10;        Verifica si la clave &quot;telefono&quot; existe en el diccionario. Si no existe, agrégala con un número de teléfono ficticio.&#10;&#10;    Eliminar una Clave:&#10;        Elimina la clave &quot;edad&quot; del diccionario, ya que esa información no es necesaria.&#10;&#10;    Imprimir el Diccionario Final:&#10;        Imprime el diccionario resultante después de realizar todas las operaciones.">
      <change afterPath="$PROJECT_DIR$/TAREA 16/Archivos de Texto en Python.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <list id="73048069-6d76-4217-9e5b-f240f9a30d04" name="Desarrollo de Función para Calcular Temperaturas Promedio en Python" comment="    Desarrolla una función en Python que calcule la temperatura promedio de una ciudad durante un período de tiempo. La función debe ser capaz de manejar datos de temperaturas de múltiples ciudades y semanas.&#10;&#10;    Utiliza como base el ejemplo anterior, donde tenías datos de 3 ciudades durante 4 semanas.&#10;&#10;    Tu función debe recibir estos datos como parámetros y calcular la temperatura promedio de cada ciudad." />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2cnz0nZ8aIc34yTU0xfZdSz7WuS" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Python.Archivos de Texto en Python.executor": "Run",
    "Python.Arreglos iteracion bucles anidados.executor": "Run",
    "Python.CalculoDescuentoPython.executor": "Run",
    "Python.Desarrollo de Función para Calcular Temperaturas Promedio en Python.executor": "Run",
    "Python.Diccionario.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "C:/Users/user/PycharmProjects/TAREA10-CREAR-REPOSITORIO-JEFFREY-MAYORGA/TAREA 12",
    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable"
  }
}]]></component>
  <component name="RunManager" selected="Python.Archivos de Texto en Python">
    <configuration name="Archivos de Texto en Python" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="TAREA10-CREAR-REPOSITORIO-JEFFREY-MAYORGA" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/TAREA 16" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/TAREA 16/Archivos de Texto en Python.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="CalculoDescuentoPython" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="TAREA10-CREAR-REPOSITORIO-JEFFREY-MAYORGA" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/TAREA 14" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/TAREA 14/CalculoDescuentoPython.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Desarrollo de Función para Calcular Temperaturas Promedio en Python" type="PythonConfigurationType" factoryName="Python">
      <module name="TAREA10-CREAR-REPOSITORIO-JEFFREY-MAYORGA" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/TAREA 12" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/TAREA 12/Arreglos iteracion bucles anidados.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Diccionario" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="TAREA10-CREAR-REPOSITORIO-JEFFREY-MAYORGA" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/TAREA 15" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/TAREA 15/Diccionario.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.Diccionario" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-5a2391486177-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.13763.11" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3e647325-70bf-45fb-a137-ac76d69e6093" name="Changes" comment="" />
      <changelist id="73048069-6d76-4217-9e5b-f240f9a30d04" name="Desarrollo de Función para Calcular Temperaturas Promedio en Python" comment="    Desarrolla una función en Python que calcule la temperatura promedio de una ciudad durante un período de tiempo. La función debe ser capaz de manejar datos de temperaturas de múltiples ciudades y semanas.&#10;&#10;    Utiliza como base el ejemplo anterior, donde tenías datos de 3 ciudades durante 4 semanas.&#10;&#10;    Tu función debe recibir estos datos como parámetros y calcular la temperatura promedio de cada ciudad." />
      <created>1708761909931</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1708761909931</updated>
    </task>
    <task id="LOCAL-00001" summary="Tarea: Iteración de arreglos multidimensionales con bucles anidados&#10;&#10;    Crear una matriz 3D que represente los datos de temperaturas diarias en varias ciudades. En una dimensión, puedes tener diferentes ciudades, en otra dimensión, días de la semana (Lunes, Martes, Miércoles, etc.), y en la tercera dimensión, semanas.&#10;    Dentro de cada celda de la matriz, puedes almacenar las temperaturas diarias para una ciudad en un día específico de una semana determinada.&#10;    Utilizar bucles anidados para calcular el promedio de temperaturas para una ciudad por cada una de las semanas.&#10;    Mostrar el promedio de temperaturas para cada ciudad y semana en la pantalla.">
      <option name="closed" value="true" />
      <created>1709019524919</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1709019524919</updated>
    </task>
    <task id="LOCAL-00002" summary="    Desarrolla una función en Python que calcule la temperatura promedio de una ciudad durante un período de tiempo. La función debe ser capaz de manejar datos de temperaturas de múltiples ciudades y semanas.&#10;&#10;    Utiliza como base el ejemplo anterior, donde tenías datos de 3 ciudades durante 4 semanas.&#10;&#10;    Tu función debe recibir estos datos como parámetros y calcular la temperatura promedio de cada ciudad.">
      <option name="closed" value="true" />
      <created>1710095298025</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1710095298025</updated>
    </task>
    <task id="LOCAL-00003" summary="Tarea de Programación: Cálculo de Descuento en Compras&#10;&#10;Objetivo:&#10;&#10;El objetivo de esta tarea es practicar el uso de funciones en Python, incluyendo parámetros, valores predeterminados y retorno de valores. Deberás crear un programa que calcule el descuento en compras en función del monto total de la compra y mostrar el monto final a pagar.&#10;&#10;    Creación de la Función:&#10;&#10;    Crea una función llamada calcular_descuento que tome dos parámetros: el monto total de la compra y un valor predeterminado para el porcentaje de descuento (por ejemplo, 10% por defecto).&#10;&#10;    La función debe calcular el descuento aplicando el porcentaje al monto total de la compra.&#10;&#10;    La función debe devolver el monto del descuento calculado.&#10;&#10;Llamada a la Función:&#10;&#10;    Llama a la función calcular_descuento al menos dos veces desde el programa principal.&#10;    En una llamada, proporciona el monto total de la compra y, en la otra, proporciona tanto el monto total de la compra como el porcentaje de descuento.&#10;&#10;Salida de Resultados:&#10;&#10;    Muestra los resultados de las llamadas a la función, incluyendo el monto del descuento y el monto final a pagar después del descuento.">
      <option name="closed" value="true" />
      <created>1710624618863</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1710624618863</updated>
    </task>
    <task id="LOCAL-00004" summary="Tarea: Trabajando con Diccionarios en Python&#10;&#10;Objetivo: Utilizar diccionarios en Python para representar información estructurada y realizar operaciones comunes.&#10;&#10;Instrucciones:&#10;&#10;    Crear un Diccionario:&#10;        Crea un diccionario llamado informacion_personal que contenga información ficticia sobre una persona, incluyendo al menos las claves &quot;nombre&quot;, &quot;edad&quot;, &quot;ciudad&quot; y &quot;profesion&quot;.&#10;&#10;    Acceder y Modificar Valores:&#10;        Accede al valor asociado con la clave &quot;ciudad&quot; y modifícalo con una ciudad diferente.&#10;        Agrega una nueva clave-valor al diccionario que represente la &quot;profesion&quot; de la persona.&#10;&#10;    Verificar Existencia de Claves:&#10;        Verifica si la clave &quot;telefono&quot; existe en el diccionario. Si no existe, agrégala con un número de teléfono ficticio.&#10;&#10;    Eliminar una Clave:&#10;        Elimina la clave &quot;edad&quot; del diccionario, ya que esa información no es necesaria.&#10;&#10;    Imprimir el Diccionario Final:&#10;        Imprime el diccionario resultante después de realizar todas las operaciones.">
      <option name="closed" value="true" />
      <created>1711125465310</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1711125465310</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Tarea: Iteración de arreglos multidimensionales con bucles anidados&#10;&#10;    Crear una matriz 3D que represente los datos de temperaturas diarias en varias ciudades. En una dimensión, puedes tener diferentes ciudades, en otra dimensión, días de la semana (Lunes, Martes, Miércoles, etc.), y en la tercera dimensión, semanas.&#10;    Dentro de cada celda de la matriz, puedes almacenar las temperaturas diarias para una ciudad en un día específico de una semana determinada.&#10;    Utilizar bucles anidados para calcular el promedio de temperaturas para una ciudad por cada una de las semanas.&#10;    Mostrar el promedio de temperaturas para cada ciudad y semana en la pantalla." />
    <MESSAGE value="    Desarrolla una función en Python que calcule la temperatura promedio de una ciudad durante un período de tiempo. La función debe ser capaz de manejar datos de temperaturas de múltiples ciudades y semanas.&#10;&#10;    Utiliza como base el ejemplo anterior, donde tenías datos de 3 ciudades durante 4 semanas.&#10;&#10;    Tu función debe recibir estos datos como parámetros y calcular la temperatura promedio de cada ciudad." />
    <MESSAGE value="Tarea de Programación: Cálculo de Descuento en Compras&#10;&#10;Objetivo:&#10;&#10;El objetivo de esta tarea es practicar el uso de funciones en Python, incluyendo parámetros, valores predeterminados y retorno de valores. Deberás crear un programa que calcule el descuento en compras en función del monto total de la compra y mostrar el monto final a pagar.&#10;&#10;    Creación de la Función:&#10;&#10;    Crea una función llamada calcular_descuento que tome dos parámetros: el monto total de la compra y un valor predeterminado para el porcentaje de descuento (por ejemplo, 10% por defecto).&#10;&#10;    La función debe calcular el descuento aplicando el porcentaje al monto total de la compra.&#10;&#10;    La función debe devolver el monto del descuento calculado.&#10;&#10;Llamada a la Función:&#10;&#10;    Llama a la función calcular_descuento al menos dos veces desde el programa principal.&#10;    En una llamada, proporciona el monto total de la compra y, en la otra, proporciona tanto el monto total de la compra como el porcentaje de descuento.&#10;&#10;Salida de Resultados:&#10;&#10;    Muestra los resultados de las llamadas a la función, incluyendo el monto del descuento y el monto final a pagar después del descuento." />
    <MESSAGE value="Tarea: Trabajando con Diccionarios en Python&#10;&#10;Objetivo: Utilizar diccionarios en Python para representar información estructurada y realizar operaciones comunes.&#10;&#10;Instrucciones:&#10;&#10;    Crear un Diccionario:&#10;        Crea un diccionario llamado informacion_personal que contenga información ficticia sobre una persona, incluyendo al menos las claves &quot;nombre&quot;, &quot;edad&quot;, &quot;ciudad&quot; y &quot;profesion&quot;.&#10;&#10;    Acceder y Modificar Valores:&#10;        Accede al valor asociado con la clave &quot;ciudad&quot; y modifícalo con una ciudad diferente.&#10;        Agrega una nueva clave-valor al diccionario que represente la &quot;profesion&quot; de la persona.&#10;&#10;    Verificar Existencia de Claves:&#10;        Verifica si la clave &quot;telefono&quot; existe en el diccionario. Si no existe, agrégala con un número de teléfono ficticio.&#10;&#10;    Eliminar una Clave:&#10;        Elimina la clave &quot;edad&quot; del diccionario, ya que esa información no es necesaria.&#10;&#10;    Imprimir el Diccionario Final:&#10;        Imprime el diccionario resultante después de realizar todas las operaciones." />
    <option name="LAST_COMMIT_MESSAGE" value="Tarea: Trabajando con Diccionarios en Python&#10;&#10;Objetivo: Utilizar diccionarios en Python para representar información estructurada y realizar operaciones comunes.&#10;&#10;Instrucciones:&#10;&#10;    Crear un Diccionario:&#10;        Crea un diccionario llamado informacion_personal que contenga información ficticia sobre una persona, incluyendo al menos las claves &quot;nombre&quot;, &quot;edad&quot;, &quot;ciudad&quot; y &quot;profesion&quot;.&#10;&#10;    Acceder y Modificar Valores:&#10;        Accede al valor asociado con la clave &quot;ciudad&quot; y modifícalo con una ciudad diferente.&#10;        Agrega una nueva clave-valor al diccionario que represente la &quot;profesion&quot; de la persona.&#10;&#10;    Verificar Existencia de Claves:&#10;        Verifica si la clave &quot;telefono&quot; existe en el diccionario. Si no existe, agrégala con un número de teléfono ficticio.&#10;&#10;    Eliminar una Clave:&#10;        Elimina la clave &quot;edad&quot; del diccionario, ya que esa información no es necesaria.&#10;&#10;    Imprimir el Diccionario Final:&#10;        Imprime el diccionario resultante después de realizar todas las operaciones." />
  </component>
</project>